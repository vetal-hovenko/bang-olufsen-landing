{"version":3,"sources":["scripts/main.js"],"names":["onEntry","entry","forEach","change","isIntersecting","target","classList","add","options","threshold","observer","IntersectionObserver","elements","document","querySelectorAll","elm","observe"],"mappings":";AAAA,aAgBC,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,MAAA,EAAA,OAAA,UAAA,CAAA,GAAA,MAAA,QAAA,KAAA,EAAA,EAAA,IAAA,CAAA,IAAA,EAAA,EAAA,EAAA,aAAA,MAAA,CAAA,EAAA,EAAA,EAAA,WAAA,OAAA,GAAA,EAAA,OAAA,CAAA,MAAA,GAAA,CAAA,MAAA,EAAA,MAAA,EAAA,OAAA,EAAA,SAAA,GAAA,MAAA,GAAA,EAAA,GAAA,MAAA,IAAA,UAAA,yIAAA,IAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,MAAA,CAAA,EAAA,WAAA,EAAA,EAAA,OAAA,aAAA,EAAA,WAAA,IAAA,EAAA,EAAA,OAAA,OAAA,EAAA,EAAA,KAAA,GAAA,EAAA,SAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,WAAA,IAAA,GAAA,MAAA,EAAA,QAAA,EAAA,SAAA,QAAA,GAAA,EAAA,MAAA,KAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAdD,SAASA,EAAQC,GACfA,EAAMC,QAAQ,SAAAC,GACRA,EAAOC,gBACTD,EAAOE,OAAOC,UAAUC,IAAI,yBAKlC,IAMC,EANKC,EAAU,CAAEC,UAAW,CAAC,KACxBC,EAAW,IAAIC,qBAAqBX,EAASQ,GAC7CI,EAAWC,SAASC,iBAAiB,mBAEzBF,EAAAA,EAAAA,GAEjB,IAF2B,IAAA,EAAA,MAAA,EAAA,EAAA,KAAA,MAAA,CAAjBG,IAAAA,EAAiB,EAAA,MAC1BL,EAASM,QAAQD,IAClB,MAAA,GAAA,EAAA,EAAA,GAAA,QAAA,EAAA","file":"main.0976b551.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nfunction onEntry(entry) {\n  entry.forEach(change => {\n    if (change.isIntersecting) {\n      change.target.classList.add('animated-block-show');\n    }\n  });\n}\n\nconst options = { threshold: [0.2] };\nconst observer = new IntersectionObserver(onEntry, options);\nconst elements = document.querySelectorAll('.animated-block');\n\nfor (const elm of elements) {\n  observer.observe(elm);\n}\n"]}